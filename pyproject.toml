[tool.poetry]
name = "mini-pos"
version = "0.2.1"
description = "Small browser based POS system"
authors = ["Jan Breig <git@pygos.space>"]
license = "MIT"
readme = "README.md"
packages = [{include = "mini_pos"}]

[tool.poetry.dependencies]
python = "^3.11"
Flask = "^3.0.0"
Flask-SQLAlchemy = "^3.1.1"
gunicorn = "^21.2.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.12"
black = "^23.12.1"
mypy = "^1.8.0"
types-Flask-SQLAlchemy = "^2.5.9.4"
types-Flask = "^1.1.6"
pylint = "^3.0.3"
pytest = "^7.4.4"

[tool.poetry.group.analysis]
optional = true

[tool.poetry.group.analysis.dependencies]
matplotlib = "^3.8.2"
pandas = "^2.2.0"
numpy = "^1.26.3"

[tool.black]
line_length = 120

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
	"disallowed-name",
	"missing-class-docstring",
	"missing-function-docstring",
	"missing-module-docstring"
]

[tool.ruff]
line-length = 120
select = [
  "F",                        # pyflakes
  "E", "W",                   # pycodestyle (error, warning)
  "C90",                      # mccabe (complexty)
  "I",                        # isort (import sorting)
  "N",                        # pep8-naming
  "UP",                       # pyupgrade (newer syntax)
  "YTT",                      # sys.version misuse
  "S",                        # bandit (security)
  "BLE",                      # blind except
  "FBT",                      # boolean trap
  "B",                        # bugbear
  "A",                        # name shadowing
  "COM",                      # commas
  "C4",                       # unnecessary stuff
  "DTZ",                      # datetime
  "DJ",                       # django
  "EM",                       # errmsg
  "ISC",                      # implicit string concat
  "ICN",                      # import conventions
  "G",                        # logging format
  "INP",                      # implicit namespace package
  "PIE",                      # unnecessary stuff
  "PYI",                      # typing
  "PT",                       # pytest
  "Q",                        # quotes
  "RSE",                      # unnecessary raise exception stuff
  "RET",                      # unnecessary return stuff
  "SLF",                      # self access
  "SIM",                      # simplify
  "TID",                      # tidy imports
  "TCH",                      # type checking
  "INT",                      # printf
  "ARG",                      # unused arguments
  "PD",                       # pandas code
  "PGH",                      # pygrep hooks
  "TRY",                      # tryceratops (exception anti pattern)
  "NPY",                      # numpy
  "RUF"                       # ruf rules
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
